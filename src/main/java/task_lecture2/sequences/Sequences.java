package task_lecture2.sequences;

public interface Sequences {
    /**
     * Выводит в консоль n первых членов последовательности A:
     * 2, 4, 6, 8, 10...
     * @param n число членов последовательности для вывода
     */
    void sequenceA(int n);

    /**
     * Выводит в консоль n первых членов последовательности B:
     * 1, 3, 5, 7, 9...
     * @param n число членов последовательности для вывода
     */
    void sequenceB(int n);

    /**
     * Выводит в консоль n первых членов последовательности C:
     * 1, 4, 9, 16, 25...
     * @param n число членов последовательности для вывода
     */
    void sequenceC(int n);

    /**
     * Выводит в консоль n первых членов последовательности D:
     * 1, 8, 27, 64, 125...
     * @param n число членов последовательности для вывода
     */
    void sequenceD(int n);

    /**
     * Выводит в консоль n первых членов последовательности E:
     * 1, -1, 1, -1, 1, -1...
     * @param n число членов последовательности для вывода
     */
    void sequenceE(int n);

    /**
     * Выводит в консоль n первых членов последовательности F:
     * 1, -2, 3, -4, 5, -6...
     * @param n число членов последовательности для вывода
     */
    void sequenceF(int n);

    /**
     * Выводит в консоль n первых членов последовательности G:
     * 1, -4, 9, -16, 25....
     * @param n число членов последовательности для вывода
     */
    void sequenceG(int n);

    /**
     * Выводит в консоль n первых членов последовательности H:
     * 1, 0, 2, 0, 3, 0, 4....
     * @param n число членов последовательности для вывода
     */
    void sequenceH(int n);

    /**
     * Выводит в консоль n первых членов последовательности I:
     * 1, 2, 6, 24, 120, 720...
     * @param n число членов последовательности для вывода
     */
    void sequenceI(int n);

    /**
     * Выводит в консоль n первых членов последовательности J:
     * 1, 1, 2, 3, 5, 8, 13, 21…
     * @param n число членов последовательности для вывода
     */
    void sequenceJ(int n);
}

